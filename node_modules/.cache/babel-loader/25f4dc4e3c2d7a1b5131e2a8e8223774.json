{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021-outline-tool-no-docker-master\\\\app\\\\javascript\\\\components\\\\group\\\\_index.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { React, useState } from \"react\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport Entry from \"./_entry.jsx\";\nimport List from \"./_list.jsx\";\nimport axios from \"axios\";\nimport { Breadcrumb, Button, Checkbox, Form, Input, Layout, Col, Row, Table, Space, Popconfirm } from \"antd\";\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\n\nvar Group = /*#__PURE__*/function (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      groups: [],\n      searchText: \"\",\n      searchedColumn: \"\"\n    };\n\n    _this.loadGroups = function () {\n      var url = \"/api/v1/group/index\";\n      console.log(url);\n      fetch(url).then(function (data) {\n        if (data.ok) {\n          return data.json();\n        }\n\n        throw new Error(\"Network error.\");\n      }).then(function (data) {\n        data.forEach(function (group) {\n          var newEl = {\n            key: group.id,\n            id: group.id,\n            name: group.group_name,\n            description: group.group_description\n          };\n\n          _this.setState(function (prevState) {\n            return {\n              groups: [].concat(_toConsumableArray(prevState.groups), [newEl])\n            };\n          });\n        });\n      })[\"catch\"](function (err) {\n        return message.error(\"Error: \" + err);\n      });\n    };\n\n    _this.createGroup = function (values) {\n      console.log(\"Success:\", values);\n      var url = \"/api/v1/group/create\"; // fetch(url, {\n      //   method: \"POST\",\n      //   body: JSON.stringify({\n      //     group_name: values.groupName,\n      //     group_description: values.groupDescription,\n      //   }),\n      //   headers: {\n      //     \"Content-type\": \"application/json; charset=UTF-8\",\n      //   },\n      // });\n      //post req to register user\n      // fetch(url, {\n      //   method: \"POST\",\n      //   headers: {\n      //     \"Content-Type\":\n      //       \"application/x-www-form-urlencoded; charset=UTF-8;application/json\",\n      //   },\n      //   //mode: no-cors resolves Cors issues\n      //   mode: \"no-cors\",\n      //   body: JSON.stringify(values),\n      // });\n      // axios\n      //   .post(url, { params: { group_name: \"1\", group_description: \"1\" } })\n      //   .then((res) => {\n      //     console.log(res);\n      //     console.log(res.data);\n      //   });\n      // Build formData object.\n      // let formData = new FormData();\n      // formData.append(\"group_name\", \"John\");\n      // formData.append(\"group_description\", \"John123\");\n\n      fetch(url, {\n        mode: \"no-cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json, text/plain, */*\",\n          credentials: \"omit\" //\n\n        },\n        body: {\n          group_name: \"admin\",\n          group_description: \"1234\"\n        },\n        method: \"post\"\n      }); //this.loadGroups();\n    };\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadGroups();\n    }\n  }, {\n    key: \"render\",\n    value:\n    /*  state = {\r\n         groups: [],\r\n         searchText: \"\",\r\n         searchedColumn: \"\",\r\n       };\r\n         componentDidMount() {\r\n         console.log(\"DID MOUNT\", I18n.t(\"group.id\"));\r\n         this.loadGroups();\r\n       }\r\n         columns = [\r\n         {\r\n           title: I18n.t(\"group.id\"),\r\n           dataIndex: \"id\",\r\n           key: \"id\",\r\n           sorter: (a, b) => a.id - b.id,\r\n         },\r\n         {\r\n           title: I18n.t(\"group.name\"),\r\n           dataIndex: \"name\",\r\n           key: \"name\",\r\n           width: \"40%\",\r\n           sorter: (a, b) => a.name.length - b.name.length,\r\n           //...this.getColumnSearchProps(\"name\"),\r\n         },\r\n         {\r\n             title: I18n.t(\"group.description\"),\r\n             dataIndex: \"description\",\r\n             key: \"description\",\r\n             width: \"40%\",\r\n             sorter: (a, b) => a.description.length - b.description.length,\r\n             //...this.getColumnSearchProps(\"name\"),\r\n           },\r\n         {\r\n           title: I18n.t(\"group.action\"),\r\n           key: \"action\",\r\n           render: (_text, record) => (\r\n             <Space size=\"middle\">\r\n               <a onClick={() => this.editStatus(record)}>\r\n                 <EditOutlined />\r\n               </a>\r\n               <Popconfirm\r\n                 title=\"削除してもよろしいでしょうか？\"\r\n                 onConfirm={() => this.deleteStatus(record)}\r\n                 okText=\"Yes\"\r\n                 cancelText=\"No\"\r\n               >\r\n                 <a href=\"#\" type=\"danger\">\r\n                   <DeleteOutlined />{\" \"}\r\n                 </a>\r\n               </Popconfirm>\r\n             </Space>\r\n           ),\r\n         },\r\n       ];\r\n         loadGroups = () => {\r\n         const url = \"/api/v1/group/index\";\r\n         console.log(url);\r\n         fetch(url)\r\n           .then((data) => {\r\n             if (data.ok) {\r\n               return data.json();\r\n             }\r\n             throw new Error(\"Network error.\");\r\n           })\r\n           .then((data) => {\r\n             data.forEach((group) => {\r\n               const newEl = {\r\n                 key: group.id,\r\n                 id: group.id,\r\n                 name: group.group_name,\r\n                 description: group.group_description,\r\n               };\r\n     \r\n               this.setState((prevState) => ({\r\n                 groups: [...prevState.groups, newEl],\r\n               }));\r\n             });\r\n           })\r\n           .catch((err) => message.error(\"Error: \" + err));\r\n       };\r\n    */\n    function render() {\n      return (\n        /*#__PURE__*/\n\n        /*   <>\r\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n            <Breadcrumb.Item>Group</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          \r\n          <div\r\n          className=\"site-layout-background\"\r\n          style={{ padding: 24, minHeight: 200,background: '#fff', }}\r\n        >\r\n          \r\n          <Row>\r\n          <Col span={12} offset={6}>\r\n         \r\n           <Form  labelCol={{\r\n        span: 8,\r\n        }}>\r\n        <Form.Item\r\n        label=\"グループ名:\"\r\n        name=\"groupName\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n        <Input />\r\n        </Form.Item>\r\n         <Form.Item\r\n        label=\"グループ概要:\"\r\n        name=\"groupDescription\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n        <Input />\r\n        </Form.Item>\r\n         <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n        >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          保存\r\n        </Button>\r\n        </Form.Item>\r\n        </Form>\r\n                </Col>\r\n        </Row>\r\n        \n        </div>\r\n          <Table\r\n            style={{marginTop:10}}\r\n            className=\"table-striped-rows\"\r\n            dataSource={this.state.groups}\r\n            columns={this.columns}\r\n            pagination={{ pageSize: 5 }}\r\n          />\r\n        </> */\n        React.createElement(Layout, {\n          style: {\n            minHeight: \"100vh\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(Entry, {\n          createGroup: this.createGroup,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(List, {\n          dataSource: this.state.groups,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 9\n          }\n        }))\n      );\n    }\n  }]);\n\n  return Group;\n}(React.Component);\n\nexport default Group;","map":{"version":3,"sources":["D:/2021-outline-tool-no-docker-master/app/javascript/components/group/_index.jsx"],"names":["React","useState","I18n","Entry","List","axios","Breadcrumb","Button","Checkbox","Form","Input","Layout","Col","Row","Table","Space","Popconfirm","EditOutlined","DeleteOutlined","SearchOutlined","Group","state","groups","searchText","searchedColumn","loadGroups","url","console","log","fetch","then","data","ok","json","Error","forEach","group","newEl","key","id","name","group_name","description","group_description","setState","prevState","err","message","error","createGroup","values","mode","cache","credentials","headers","Accept","body","method","minHeight","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAO,0BAAP;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,IAJF,EAKEC,KALF,EAMEC,MANF,EAOEC,GAPF,EAQEC,GARF,EASEC,KATF,EAUEC,KAVF,EAWEC,UAXF,QAYO,MAZP;AAaA,SACEC,YADF,EAEEC,cAFF,EAGEC,cAHF,QAIO,mBAJP;;IAMMC,K;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,cAAc,EAAE;AAHV,K;;UAURC,U,GAAa,YAAM;AACjB,UAAMC,GAAG,GAAG,qBAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAG,MAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACQ,UAACC,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,EAAT,EAAa;AACX,iBAAOD,IAAI,CAACE,IAAL,EAAP;AACD;;AACD,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACD,OANH,EAOGJ,IAPH,CAOQ,UAACC,IAAD,EAAU;AACdA,QAAAA,IAAI,CAACI,OAAL,CAAa,UAACC,KAAD,EAAW;AACtB,cAAMC,KAAK,GAAG;AACZC,YAAAA,GAAG,EAAEF,KAAK,CAACG,EADC;AAEZA,YAAAA,EAAE,EAAEH,KAAK,CAACG,EAFE;AAGZC,YAAAA,IAAI,EAAEJ,KAAK,CAACK,UAHA;AAIZC,YAAAA,WAAW,EAAEN,KAAK,CAACO;AAJP,WAAd;;AAOA,gBAAKC,QAAL,CAAc,UAACC,SAAD;AAAA,mBAAgB;AAC5BvB,cAAAA,MAAM,+BAAMuB,SAAS,CAACvB,MAAhB,IAAwBe,KAAxB;AADsB,aAAhB;AAAA,WAAd;AAGD,SAXD;AAYD,OApBH,WAqBS,UAACS,GAAD;AAAA,eAASC,OAAO,CAACC,KAAR,CAAc,YAAYF,GAA1B,CAAT;AAAA,OArBT;AAsBD,K;;UAEDG,W,GAAc,UAACC,MAAD,EAAY;AACxBvB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBsB,MAAxB;AACA,UAAMxB,GAAG,GAAG,sBAAZ,CAFwB,CAIxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAG,MAAAA,KAAK,CAACH,GAAD,EAAM;AACTyB,QAAAA,IAAI,EAAE,SADG;AAETC,QAAAA,KAAK,EAAE,UAFE;AAGTC,QAAAA,WAAW,EAAE,aAHJ;AAITC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,MAAM,EAAE,mCAFD;AAGPF,UAAAA,WAAW,EAAE,MAHN,CAGc;;AAHd,SAJA;AASTG,QAAAA,IAAI,EAAE;AACJf,UAAAA,UAAU,EAAE,OADR;AAEJE,UAAAA,iBAAiB,EAAE;AAFf,SATG;AAaTc,QAAAA,MAAM,EAAE;AAbC,OAAN,CAAL,CAvCwB,CAuDxB;AACD,K;;;;;;;WAvFD,6BAAoB;AAClB,WAAKhC,UAAL;AACD;;;;AAsFD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIE,sBAAS;AACP;AAAA;;AACE;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKM,4BAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEiC,YAAAA,SAAS,EAAE;AAAb,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAE,KAAKT,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,oBAAC,IAAD;AAAM,UAAA,UAAU,EAAE,KAAK5B,KAAL,CAAWC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAnEF;AAwED;;;;EA5PiBtB,KAAK,CAAC2D,S;;AA+P1B,eAAevC,KAAf","sourcesContent":["import { React, useState } from \"react\";\r\nimport I18n from \"i18n-js\";\r\nimport \"../../bundles/i18n/ja.js\";\r\nimport Entry from \"./_entry.jsx\";\r\nimport List from \"./_list.jsx\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Space,\r\n  Popconfirm,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass Group extends React.Component {\r\n  state = {\r\n    groups: [],\r\n    searchText: \"\",\r\n    searchedColumn: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadGroups();\r\n  }\r\n\r\n  loadGroups = () => {\r\n    const url = \"/api/v1/group/index\";\r\n    console.log(url);\r\n    fetch(url)\r\n      .then((data) => {\r\n        if (data.ok) {\r\n          return data.json();\r\n        }\r\n        throw new Error(\"Network error.\");\r\n      })\r\n      .then((data) => {\r\n        data.forEach((group) => {\r\n          const newEl = {\r\n            key: group.id,\r\n            id: group.id,\r\n            name: group.group_name,\r\n            description: group.group_description,\r\n          };\r\n\r\n          this.setState((prevState) => ({\r\n            groups: [...prevState.groups, newEl],\r\n          }));\r\n        });\r\n      })\r\n      .catch((err) => message.error(\"Error: \" + err));\r\n  };\r\n\r\n  createGroup = (values) => {\r\n    console.log(\"Success:\", values);\r\n    const url = \"/api/v1/group/create\";\r\n\r\n    // fetch(url, {\r\n    //   method: \"POST\",\r\n    //   body: JSON.stringify({\r\n    //     group_name: values.groupName,\r\n    //     group_description: values.groupDescription,\r\n    //   }),\r\n    //   headers: {\r\n    //     \"Content-type\": \"application/json; charset=UTF-8\",\r\n    //   },\r\n    // });\r\n\r\n    //post req to register user\r\n    // fetch(url, {\r\n    //   method: \"POST\",\r\n    //   headers: {\r\n    //     \"Content-Type\":\r\n    //       \"application/x-www-form-urlencoded; charset=UTF-8;application/json\",\r\n    //   },\r\n    //   //mode: no-cors resolves Cors issues\r\n    //   mode: \"no-cors\",\r\n    //   body: JSON.stringify(values),\r\n    // });\r\n\r\n    // axios\r\n    //   .post(url, { params: { group_name: \"1\", group_description: \"1\" } })\r\n    //   .then((res) => {\r\n    //     console.log(res);\r\n    //     console.log(res.data);\r\n    //   });\r\n\r\n    // Build formData object.\r\n    // let formData = new FormData();\r\n    // formData.append(\"group_name\", \"John\");\r\n    // formData.append(\"group_description\", \"John123\");\r\n\r\n    fetch(url, {\r\n      mode: \"no-cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json, text/plain, */*\",\r\n        credentials: \"omit\", //\r\n      },\r\n      body: {\r\n        group_name: \"admin\",\r\n        group_description: \"1234\",\r\n      },\r\n      method: \"post\",\r\n    });\r\n\r\n    //this.loadGroups();\r\n  };\r\n  /*  state = {\r\n       groups: [],\r\n       searchText: \"\",\r\n       searchedColumn: \"\",\r\n     };\r\n\r\n     componentDidMount() {\r\n       console.log(\"DID MOUNT\", I18n.t(\"group.id\"));\r\n       this.loadGroups();\r\n     }\r\n\r\n     columns = [\r\n       {\r\n         title: I18n.t(\"group.id\"),\r\n         dataIndex: \"id\",\r\n         key: \"id\",\r\n         sorter: (a, b) => a.id - b.id,\r\n       },\r\n       {\r\n         title: I18n.t(\"group.name\"),\r\n         dataIndex: \"name\",\r\n         key: \"name\",\r\n         width: \"40%\",\r\n         sorter: (a, b) => a.name.length - b.name.length,\r\n         //...this.getColumnSearchProps(\"name\"),\r\n       },\r\n       {\r\n           title: I18n.t(\"group.description\"),\r\n           dataIndex: \"description\",\r\n           key: \"description\",\r\n           width: \"40%\",\r\n           sorter: (a, b) => a.description.length - b.description.length,\r\n           //...this.getColumnSearchProps(\"name\"),\r\n         },\r\n       {\r\n         title: I18n.t(\"group.action\"),\r\n         key: \"action\",\r\n         render: (_text, record) => (\r\n           <Space size=\"middle\">\r\n             <a onClick={() => this.editStatus(record)}>\r\n               <EditOutlined />\r\n             </a>\r\n             <Popconfirm\r\n               title=\"削除してもよろしいでしょうか？\"\r\n               onConfirm={() => this.deleteStatus(record)}\r\n               okText=\"Yes\"\r\n               cancelText=\"No\"\r\n             >\r\n               <a href=\"#\" type=\"danger\">\r\n                 <DeleteOutlined />{\" \"}\r\n               </a>\r\n             </Popconfirm>\r\n           </Space>\r\n         ),\r\n       },\r\n     ];\r\n\r\n     loadGroups = () => {\r\n       const url = \"/api/v1/group/index\";\r\n       console.log(url);\r\n       fetch(url)\r\n         .then((data) => {\r\n           if (data.ok) {\r\n             return data.json();\r\n           }\r\n           throw new Error(\"Network error.\");\r\n         })\r\n         .then((data) => {\r\n           data.forEach((group) => {\r\n             const newEl = {\r\n               key: group.id,\r\n               id: group.id,\r\n               name: group.group_name,\r\n               description: group.group_description,\r\n             };\r\n   \r\n             this.setState((prevState) => ({\r\n               groups: [...prevState.groups, newEl],\r\n             }));\r\n           });\r\n         })\r\n         .catch((err) => message.error(\"Error: \" + err));\r\n     };\r\n*/\r\n  render() {\r\n    return (\r\n      /*   <>\r\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\r\n          <Breadcrumb.Item>Group</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        \r\n        <div\r\n        className=\"site-layout-background\"\r\n        style={{ padding: 24, minHeight: 200,background: '#fff', }}\r\n      >\r\n        \r\n        <Row>\r\n        <Col span={12} offset={6}>\r\n       \r\n         <Form  labelCol={{\r\n    span: 8,\r\n  }}>\r\n    <Form.Item\r\n      label=\"グループ名:\"\r\n      name=\"groupName\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n \r\n    <Form.Item\r\n      label=\"グループ概要:\"\r\n      name=\"groupDescription\"\r\n      rules={[\r\n        {\r\n          required: true,\r\n        },\r\n      ]}\r\n    >\r\n      <Input />\r\n    </Form.Item>\r\n \r\n    <Form.Item\r\n      wrapperCol={{\r\n        offset: 8,\r\n        span: 16,\r\n      }}\r\n    >\r\n      <Button type=\"primary\" htmlType=\"submit\">\r\n        保存\r\n      </Button>\r\n    </Form.Item>\r\n  </Form>\r\n    \r\n        </Col>\r\n      </Row>\r\n     \r\n      </div>\r\n\r\n      <Table\r\n          style={{marginTop:10}}\r\n          className=\"table-striped-rows\"\r\n          dataSource={this.state.groups}\r\n          columns={this.columns}\r\n          pagination={{ pageSize: 5 }}\r\n        />\r\n      </> */\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Entry createGroup={this.createGroup} />\r\n        <List dataSource={this.state.groups} />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Group;\r\n"]},"metadata":{},"sourceType":"module"}