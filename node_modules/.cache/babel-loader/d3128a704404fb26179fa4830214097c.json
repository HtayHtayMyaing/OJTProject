{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021-outline-tool-no-docker-master\\\\app\\\\javascript\\\\components\\\\projectInfo\\\\_index.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"antd/dist/antd.css\";\nimport Entry from \"./_entry\";\nimport Infos from \"./_list\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport { Button, Input, Popconfirm, Space, Card } from \"antd\";\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\n\nvar Project = /*#__PURE__*/function (_React$Component) {\n  _inherits(Project, _React$Component);\n\n  var _super = _createSuper(Project);\n\n  function Project() {\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      project_infos: [],\n      searchText: \"\",\n      searchedColumn: \"\",\n      visible: false,\n      status: \"\",\n      type: \"\",\n      editable: false,\n      editProjectInfo: [],\n      modalList: [],\n      selectedUser: [],\n      isModalVisible: false,\n      list: [],\n      selectedRowKeys: 0,\n      email: \"\",\n      userId: 0,\n      bEmail: \"\"\n    };\n\n    _this.handleBlur = function (e) {\n      var user = _this.state.list.filter(function (user) {\n        return user.email == e.target.value;\n      });\n\n      if (e.target.value != \"\") {\n        if (user.length == 0) {\n          _this.setState({\n            // エラーメッセージを表示する\n            // M073: フロントメールアドレスが存在しません。\n            status: I18n.t(\"message.M073\"),\n            visible: true,\n            type: \"error\"\n          });\n        } else {\n          _this.setState({\n            userId: user[0].key,\n            bEmail: user[0].email\n          });\n        }\n      }\n    };\n\n    _this.doReset = function () {\n      document.getElementById(\"entryForm\").reset();\n    };\n\n    _this.onFinish = function (values) {\n      if (values.max_wordcount <= values.min_wordcount) {\n        _this.setState({\n          // エラーメッセージを表示する\n          // M023: 骨子全体の文字数「最低限文字数」を「最大限文字数」より小さい値にしてください。\n          status: I18n.t(\"message.M023\"),\n          visible: true,\n          type: \"error\"\n        });\n      } else {\n        if (values.key > 0) {\n          // 案件情報管理テンプレート更新処理\n          var url = \"api/v1/project_info/update/\" + values.key;\n          fetch(url, {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(values)\n          }).then(function (data) {\n            return data.json();\n          }).then(function (data) {\n            if (data.duplicate) {\n              // エラーメッセージを表示する\n              // M020:既に登録されている案件名です。\n              _this.setState({\n                status: I18n.t(\"message.M020\"),\n                visible: true,\n                type: \"error\"\n              }); // 更新のためテーブルからデータを設定する\n\n\n              _this.handleEdit(values);\n            } else {\n              if (data.status) {\n                // 成功メッセージを表示する\n                // M005: 更新しました。\n                _this.setState({\n                  duplicate: false,\n                  status: I18n.t(\"message.M005\"),\n                  visible: true,\n                  type: \"success\",\n                  editProjectInfo: [],\n                  project_infos: []\n                }); // 一覧のデータを変更する\n\n\n                _this.getProjectInfoData(data);\n\n                _this.doReset();\n              } else {\n                // エラーメッセージを表示する\n                // M058: データ更新に失敗しました。\n                _this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M058\"),\n                  visible: true,\n                  type: \"error\",\n                  project_infos: []\n                });\n              }\n            }\n          })[\"catch\"](function () {\n            // エラーメッセージを表示する\n            // M058: データ更新に失敗しました。\n            _this.setState({\n              errorMessage: \"\",\n              status: I18n.t(\"message.M058\"),\n              visible: true,\n              type: \"error\"\n            });\n          });\n        } else {\n          // 案件情報登録処理\n          var _url = \"api/v1/project_info/create\";\n          fetch(_url, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(values)\n          }).then(function (data) {\n            return data.json();\n          }).then(function (data) {\n            if (data.duplicate) {\n              // エラーメッセージを表示する\n              // M020: 表示順が既にあります。\n              _this.setState({\n                status: I18n.t(\"message.M020\"),\n                visible: true,\n                type: \"error\"\n              }); // 更新のためテーブルからデータを設定する\n\n\n              _this.handleEdit(values);\n            } else {\n              if (data.status) {\n                // 成功メッセージを表示する\n                // M004: 登録しました。\n                _this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M004\"),\n                  visible: true,\n                  type: \"success\",\n                  editProjectInfo: [],\n                  project_infos: [],\n                  selectedUser: [],\n                  userId: 0,\n                  bEmail: \"\"\n                }); // 一覧のデータを変更する\n\n\n                _this.getProjectInfoData(data);\n\n                _this.doReset();\n              } else {\n                // エラーメッセージを表示する\n                // M056: データ登録に失敗しました。\n                _this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M056\"),\n                  visible: true,\n                  type: \"error\"\n                });\n              }\n            }\n          })[\"catch\"](function () {\n            // エラーメッセージを表示する\n            // M056: データ登録に失敗しました。\n            _this.setState({\n              duplicate: false,\n              errorMessage: \"\",\n              status: I18n.t(\"message.M056\"),\n              visible: true,\n              type: \"error\"\n            });\n          });\n        }\n      }\n    };\n\n    _this.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this.setState({\n        searchText: \"\"\n      });\n    };\n\n    _this.getColumnSearchProps = function (dataIndex) {\n      return {\n        filterDropdown: function filterDropdown(_ref) {\n          var setSelectedKeys = _ref.setSelectedKeys,\n              selectedKeys = _ref.selectedKeys,\n              confirm = _ref.confirm,\n              clearFilters = _ref.clearFilters;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(Input, {\n            ref: function ref(node) {\n              _this.searchInput = node;\n            },\n            placeholder: \"Search \".concat(dataIndex),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            style: {\n              marginBottom: 8,\n              display: \"block\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(Space, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }\n            }),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 11\n            }\n          }, I18n.t(\"common.search\")), /*#__PURE__*/React.createElement(Button, {\n            onClick: function onClick() {\n              return _this.handleReset(clearFilters);\n            },\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 11\n            }\n          }, I18n.t(\"common.reset\")), /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: function onClick() {\n              confirm({\n                closeDropdown: false\n              });\n\n              _this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 11\n            }\n          }, I18n.t(\"common.filter\"))));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(SearchOutlined, {\n            style: {\n              color: filtered ? \"#1890ff\" : undefined\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 7\n            }\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\";\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n            highlightStyle: {\n              backgroundColor: \"#ffc069\",\n              padding: 0\n            },\n            searchWords: [_this.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : \"\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 9\n            }\n          }) : text;\n        }\n      };\n    };\n\n    _this.handleSearch = function (selectedKeys, confirm, dataIndex) {\n      confirm();\n\n      _this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    _this.columns = [{\n      title: I18n.t(\"projectInfo.id\"),\n      dataIndex: \"id\",\n      key: \"id\",\n      align: \"center\"\n    }, _objectSpread({\n      title: I18n.t(\"projectInfo.projectName\"),\n      dataIndex: \"project_name\",\n      key: \"project_name\"\n    }, _this.getColumnSearchProps(\"project_name\")), {\n      title: I18n.t(\"projectInfo.wordcount\"),\n      dataIndex: \"wordcount\",\n      key: \"wordcount\"\n    }, _objectSpread({\n      title: I18n.t(\"projectInfo.email\"),\n      dataIndex: \"email\",\n      key: \"email\",\n      sorter: function sorter(a, b) {\n        return a.email.localeCompare(b.email);\n      }\n    }, _this.getColumnSearchProps(\"email\")), _objectSpread({\n      title: I18n.t(\"projectInfo.username\"),\n      dataIndex: \"username\",\n      key: \"username\",\n      sorter: function sorter(a, b) {\n        return a.username.localeCompare(b.username);\n      }\n    }, _this.getColumnSearchProps(\"username\")), {\n      title: I18n.t(\"projectInfo.action\"),\n      key: \"action\",\n      align: \"center\",\n      render: function render(_text, record) {\n        return /*#__PURE__*/React.createElement(Space, {\n          size: \"middle\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          onClick: function onClick() {\n            return _this.handleEdit(record);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(EditOutlined, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(Popconfirm, {\n          title: I18n.t(\"message.M006\"),\n          onConfirm: function onConfirm() {\n            return _this.deleteStatus(record.key);\n          },\n          okText: I18n.t(\"common.okText\"),\n          cancelText: I18n.t(\"common.cancelText\"),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          type: \"danger\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }\n        }), \"\")));\n      }\n    }];\n\n    _this.handleEdit = function (record) {\n      _this.setState({\n        editable: true,\n        editProjectInfo: {\n          key: record.key,\n          id: record.id,\n          project_name: record.project_name,\n          min_wordcount: record.min_wordcount,\n          max_wordcount: record.max_wordcount,\n          email: record.email,\n          ngWords: record.ng_word\n        }\n      });\n    };\n\n    _this.deleteStatus = function (id) {\n      var url = \"api/v1/project_info/destroy/\" + id;\n      fetch(url, {\n        method: \"PUT\"\n      }).then(function (data) {\n        if (data.status) {\n          // 成功メッセージを表示する\n          // M007: 削除しました。\n          _this.setState({\n            status: I18n.t(\"message.M007\"),\n            visible: true,\n            type: \"success\"\n          });\n\n          return data.json();\n        } else {\n          // エラーメッセージを表示する\n          // M059: データ削除に失敗しました。\n          _this.setState({\n            status: I18n.t(\"message.M059\"),\n            visible: true,\n            type: \"error\"\n          });\n        }\n      }).then(function (data) {\n        _this.setState({\n          project_infos: []\n        }); // 一覧のデータを変更する\n\n\n        _this.getProjectInfoData(data);\n      })[\"catch\"](function () {\n        // エラーメッセージを表示する\n        // M059: データ削除に失敗しました。\n        _this.setState({\n          status: I18n.t(\"message.M059\"),\n          visible: true,\n          type: \"error\"\n        });\n      });\n    };\n\n    _this.loadInfos = function () {\n      var url = \"/api/v1/project_info/index\";\n      fetch(url).then(function (data) {\n        if (data.ok) {\n          return data.json();\n        }\n\n        throw new Error();\n      }).then(function (data) {\n        // 一覧のデータを変更\n        _this.getProjectInfoData(data); // ユーザー情報を取得する\n\n\n        _this.getUserData(data);\n      })[\"catch\"](function () {\n        _this.setState({\n          // エラーメッセージを表示する\n          // M060: データ取得に失敗しました。\n          status: I18n.t(\"message.M060\"),\n          visible: true,\n          type: \"error\"\n        });\n      });\n    };\n\n    _this.getProjectInfoData = function (data) {\n      data.project_infos.forEach(function (project_infos, index) {\n        var username = \"\";\n        var email = \"\";\n        var ngWord = \"\";\n        project_infos.ngwords.forEach(function (ngwords) {\n          ngWord += ngwords + \"\\n\";\n        });\n        var min = project_infos.min_wordcount.toLocaleString(navigator.language, {\n          minimumFractionDigits: 0\n        });\n        var max = project_infos.max_wordcount.toLocaleString(navigator.language, {\n          minimumFractionDigits: 0\n        });\n        email = project_infos.email;\n        var wordcount = min + \" ~ \" + max;\n\n        if (project_infos.user_name != null) {\n          username = project_infos.user_name;\n\n          if (project_infos.user_name_last != null) {\n            username += \" \" + project_infos.user_name_last;\n          }\n        } else {\n          if (project_infos.user_name_last != null) username = project_infos.user_name_last;\n        }\n\n        var newEl = {\n          key: project_infos.id,\n          id: index + 1,\n          project_name: project_infos.project_name,\n          min_wordcount: project_infos.min_wordcount,\n          max_wordcount: project_infos.max_wordcount,\n          wordcount: wordcount,\n          email: email,\n          username: username,\n          ng_word: ngWord\n        };\n\n        _this.setState(function (prevState) {\n          return {\n            project_infos: [].concat(_toConsumableArray(prevState.project_infos), [newEl])\n          };\n        });\n      });\n    };\n\n    _this.getUserData = function (data) {\n      // ユーザー情報を取得する\n      data.users.forEach(function (user, index) {\n        // user_nameとuser_name_lastを合わせる\n        var userName = (user.user_name == null ? \"\" : user.user_name) + \" \" + (user.user_name_last == null ? \"\" : user.user_name_last);\n        var newEl = {\n          key: user.id,\n          id: index + 1,\n          email: user.email,\n          username: userName\n        };\n\n        _this.setState(function (prevState) {\n          return {\n            list: [].concat(_toConsumableArray(prevState.list), [newEl])\n          };\n        });\n      });\n    };\n\n    _this.modalColumns = [{\n      title: I18n.t(\"projectInfo.id\"),\n      dataIndex: \"id\",\n      key: \"id\",\n      align: \"center\"\n    }, {\n      title: I18n.t(\"projectInfo.email\"),\n      dataIndex: \"email\",\n      key: \"email\",\n      align: \"center\"\n    }, {\n      title: I18n.t(\"projectInfo.username\"),\n      dataIndex: \"username\",\n      key: \"username\",\n      align: \"center\"\n    }];\n\n    _this.showModal = function (email) {\n      _this.setState({\n        isModalVisible: true\n      }); // フロントメールアドレスでユーザー情報を検索する\n\n\n      _this.searchResult(email);\n    };\n\n    _this.onSelectChange = function (selectedRowKeys, selectedRows) {\n      var newEl = {\n        key: selectedRows[0].key,\n        id: selectedRows[0].id,\n        email: selectedRows[0].email,\n        username: selectedRows[0].username\n      };\n\n      _this.setState({\n        selectedUser: newEl,\n        editable: false,\n        bEmail: selectedRows[0].email\n      });\n\n      _this.handleCancel();\n    };\n\n    _this.handleCancel = function () {\n      _this.setState({\n        isModalVisible: false,\n        modalList: []\n      });\n    };\n\n    _this.searchResult = function (email) {\n      if (email == \"\") {\n        _this.setState({\n          modalList: _this.state.list,\n          email: \"\"\n        });\n      } else {\n        var users = _this.state.list.filter(function (user) {\n          return user.email.includes(email);\n        });\n\n        _this.setState({\n          modalList: users,\n          email: email\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentDidMount\",\n    value: // 初期表示処理\n    function componentDidMount() {\n      this.loadInfos();\n    } // テーブル列検索のリセット処理\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-layout-background\",\n        style: {\n          padding: 24,\n          minHeight: 360,\n          align: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Space, {\n        direction: \"vertical\",\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Entry, {\n        onFinish: this.onFinish,\n        status: this.state.status,\n        type: this.state.type,\n        handleClose: this.handleClose,\n        visible: this.state.visible,\n        editProjectInfo: this.state.editProjectInfo,\n        showModal: this.showModal,\n        isModalVisible: this.state.isModalVisible,\n        modalList: this.state.modalList,\n        handleCancel: this.handleCancel,\n        searchResult: this.searchResult,\n        onSelectChange: this.onSelectChange,\n        selectedRowKeys: this.state.selectedRowKeys,\n        state: this.state,\n        modalColumns: this.modalColumns,\n        selectedUser: this.state.selectedUser,\n        email: this.state.email,\n        handleBlur: this.handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Infos, {\n        loadInfos: this.loadInfos,\n        deleteStatus: this.deleteStatus,\n        columns: this.columns,\n        handleSearch: this.handleSearch,\n        state: this.state.project_infos,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Project;\n}(React.Component);\n\nexport default Project;","map":{"version":3,"sources":["D:/2021-outline-tool-no-docker-master/app/javascript/components/projectInfo/_index.jsx"],"names":["React","Highlighter","Entry","Infos","I18n","Button","Input","Popconfirm","Space","Card","EditOutlined","DeleteOutlined","SearchOutlined","Project","state","project_infos","searchText","searchedColumn","visible","status","type","editable","editProjectInfo","modalList","selectedUser","isModalVisible","list","selectedRowKeys","email","userId","bEmail","handleBlur","e","user","filter","target","value","length","setState","t","key","doReset","document","getElementById","reset","onFinish","values","max_wordcount","min_wordcount","url","fetch","method","headers","body","JSON","stringify","then","data","json","duplicate","handleEdit","getProjectInfoData","errorMessage","handleReset","clearFilters","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","padding","node","searchInput","handleSearch","marginBottom","display","width","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","backgroundColor","columns","title","align","sorter","a","b","localeCompare","username","_text","deleteStatus","id","project_name","ngWords","ng_word","loadInfos","ok","Error","getUserData","forEach","index","ngWord","ngwords","min","toLocaleString","navigator","language","minimumFractionDigits","max","wordcount","user_name","user_name_last","newEl","prevState","users","userName","modalColumns","showModal","searchResult","onSelectChange","selectedRows","handleCancel","minHeight","handleClose","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Highlighter from \"react-highlight-words\";\nimport \"antd/dist/antd.css\";\nimport Entry from \"./_entry\";\nimport Infos from \"./_list\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport { Button, Input, Popconfirm, Space, Card } from \"antd\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SearchOutlined,\n} from \"@ant-design/icons\";\n\nclass Project extends React.Component {\n  state = {\n    project_infos: [],\n    searchText: \"\",\n    searchedColumn: \"\",\n    visible: false,\n    status: \"\",\n    type: \"\",\n    editable: false,\n    editProjectInfo: [],\n    modalList: [],\n    selectedUser: [],\n    isModalVisible: false,\n    list: [],\n    selectedRowKeys: 0,\n    email: \"\",\n    userId: 0,\n    bEmail: \"\",\n  };\n\n  handleBlur = (e) => {\n    let user = this.state.list.filter((user) => user.email == e.target.value);\n    if (e.target.value != \"\") {\n      if (user.length == 0) {\n        this.setState({\n          // エラーメッセージを表示する\n          // M073: フロントメールアドレスが存在しません。\n          status: I18n.t(\"message.M073\"),\n          visible: true,\n          type: \"error\",\n        });\n      } else {\n        this.setState({\n          userId: user[0].key,\n          bEmail: user[0].email,\n        });\n      }\n    }\n  };\n\n  // フォームに入るデータをリセットする処理\n  doReset = () => {\n    document.getElementById(\"entryForm\").reset();\n  };\n\n  // 登録と更新を決める処理\n  onFinish = (values) => {\n    if (values.max_wordcount <= values.min_wordcount) {\n      this.setState({\n        // エラーメッセージを表示する\n        // M023: 骨子全体の文字数「最低限文字数」を「最大限文字数」より小さい値にしてください。\n        status: I18n.t(\"message.M023\"),\n        visible: true,\n        type: \"error\",\n      });\n    } else {\n      if (values.key > 0) {\n        // 案件情報管理テンプレート更新処理\n        const url = \"api/v1/project_info/update/\" + values.key;\n        fetch(url, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(values),\n        })\n          .then((data) => {\n            return data.json();\n          })\n          .then((data) => {\n            if (data.duplicate) {\n              // エラーメッセージを表示する\n              // M020:既に登録されている案件名です。\n              this.setState({\n                status: I18n.t(\"message.M020\"),\n                visible: true,\n                type: \"error\",\n              });\n              // 更新のためテーブルからデータを設定する\n              this.handleEdit(values);\n            } else {\n              if (data.status) {\n                // 成功メッセージを表示する\n                // M005: 更新しました。\n                this.setState({\n                  duplicate: false,\n                  status: I18n.t(\"message.M005\"),\n                  visible: true,\n                  type: \"success\",\n                  editProjectInfo: [],\n                  project_infos: [],\n                });\n                // 一覧のデータを変更する\n                this.getProjectInfoData(data);\n                this.doReset();\n              } else {\n                // エラーメッセージを表示する\n                // M058: データ更新に失敗しました。\n                this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M058\"),\n                  visible: true,\n                  type: \"error\",\n                  project_infos: [],\n                });\n              }\n            }\n          })\n          .catch(() => {\n            // エラーメッセージを表示する\n            // M058: データ更新に失敗しました。\n            this.setState({\n              errorMessage: \"\",\n              status: I18n.t(\"message.M058\"),\n              visible: true,\n              type: \"error\",\n            });\n          });\n      } else {\n        // 案件情報登録処理\n        const url = \"api/v1/project_info/create\";\n        fetch(url, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(values),\n        })\n          .then((data) => {\n            return data.json();\n          })\n          .then((data) => {\n            if (data.duplicate) {\n              // エラーメッセージを表示する\n              // M020: 表示順が既にあります。\n              this.setState({\n                status: I18n.t(\"message.M020\"),\n                visible: true,\n                type: \"error\",\n              });\n              // 更新のためテーブルからデータを設定する\n              this.handleEdit(values);\n            } else {\n              if (data.status) {\n                // 成功メッセージを表示する\n                // M004: 登録しました。\n                this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M004\"),\n                  visible: true,\n                  type: \"success\",\n                  editProjectInfo: [],\n                  project_infos: [],\n                  selectedUser: [],\n                  userId: 0,\n                  bEmail: \"\",\n                });\n                // 一覧のデータを変更する\n                this.getProjectInfoData(data);\n                this.doReset();\n              } else {\n                // エラーメッセージを表示する\n                // M056: データ登録に失敗しました。\n                this.setState({\n                  duplicate: false,\n                  errorMessage: \"\",\n                  status: I18n.t(\"message.M056\"),\n                  visible: true,\n                  type: \"error\",\n                });\n              }\n            }\n          })\n          .catch(() => {\n            // エラーメッセージを表示する\n            // M056: データ登録に失敗しました。\n            this.setState({\n              duplicate: false,\n              errorMessage: \"\",\n              status: I18n.t(\"message.M056\"),\n              visible: true,\n              type: \"error\",\n            });\n          });\n      }\n    }\n  };\n\n  // 初期表示処理\n  componentDidMount() {\n    this.loadInfos();\n  }\n\n  // テーブル列検索のリセット処理\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  // テーブル列検索処理\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{ marginBottom: 8, display: \"block\" }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            {I18n.t(\"common.search\")}\n          </Button>\n          <Button\n            onClick={() => this.handleReset(clearFilters)}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            {I18n.t(\"common.reset\")}\n          </Button>\n          <Button\n            type=\"link\"\n            size=\"small\"\n            onClick={() => {\n              confirm({ closeDropdown: false });\n              this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex,\n              });\n            }}\n          >\n            {I18n.t(\"common.filter\")}\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: (text) =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  columns = [\n    {\n      title: I18n.t(\"projectInfo.id\"),\n      dataIndex: \"id\",\n      key: \"id\",\n      align: \"center\",\n    },\n    {\n      title: I18n.t(\"projectInfo.projectName\"),\n      dataIndex: \"project_name\",\n      key: \"project_name\",\n      ...this.getColumnSearchProps(\"project_name\"),\n    },\n    {\n      title: I18n.t(\"projectInfo.wordcount\"),\n      dataIndex: \"wordcount\",\n      key: \"wordcount\",\n    },\n    {\n      title: I18n.t(\"projectInfo.email\"),\n      dataIndex: \"email\",\n      key: \"email\",\n      sorter: (a, b) => a.email.localeCompare(b.email),\n      ...this.getColumnSearchProps(\"email\"),\n    },\n    {\n      title: I18n.t(\"projectInfo.username\"),\n      dataIndex: \"username\",\n      key: \"username\",\n      sorter: (a, b) => a.username.localeCompare(b.username),\n      ...this.getColumnSearchProps(\"username\"),\n    },\n    {\n      title: I18n.t(\"projectInfo.action\"),\n      key: \"action\",\n      align: \"center\",\n      render: (_text, record) => (\n        <Space size=\"middle\">\n          <a onClick={() => this.handleEdit(record)}>\n            <EditOutlined />\n          </a>\n\n          <Popconfirm\n            title={I18n.t(\"message.M006\")}\n            onConfirm={() => this.deleteStatus(record.key)}\n            okText={I18n.t(\"common.okText\")}\n            cancelText={I18n.t(\"common.cancelText\")}\n          >\n            <a href=\"#\" type=\"danger\">\n              <DeleteOutlined />\n              {\"\"}\n            </a>\n          </Popconfirm>\n        </Space>\n      ),\n    },\n  ];\n\n  // 更新のためテーブルからデータをformに引っ張り処理\n  handleEdit = (record) => {\n    this.setState({\n      editable: true,\n      editProjectInfo: {\n        key: record.key,\n        id: record.id,\n        project_name: record.project_name,\n        min_wordcount: record.min_wordcount,\n        max_wordcount: record.max_wordcount,\n        email: record.email,\n        ngWords: record.ng_word,\n      },\n    });\n  };\n\n  // 案件情報削除処理\n  deleteStatus = (id) => {\n    const url = \"api/v1/project_info/destroy/\" + id;\n    fetch(url, {\n      method: \"PUT\",\n    })\n      .then((data) => {\n        if (data.status) {\n          // 成功メッセージを表示する\n          // M007: 削除しました。\n          this.setState({\n            status: I18n.t(\"message.M007\"),\n            visible: true,\n            type: \"success\",\n          });\n          return data.json();\n        } else {\n          // エラーメッセージを表示する\n          // M059: データ削除に失敗しました。\n          this.setState({\n            status: I18n.t(\"message.M059\"),\n            visible: true,\n            type: \"error\",\n          });\n        }\n      })\n      .then((data) => {\n        this.setState({ project_infos: [] });\n        // 一覧のデータを変更する\n        this.getProjectInfoData(data);\n      })\n      .catch(() => {\n        // エラーメッセージを表示する\n        // M059: データ削除に失敗しました。\n        this.setState({\n          status: I18n.t(\"message.M059\"),\n          visible: true,\n          type: \"error\",\n        });\n      });\n  };\n\n  // 初期表示処理\n  loadInfos = () => {\n    const url = \"/api/v1/project_info/index\";\n    fetch(url)\n      .then((data) => {\n        if (data.ok) {\n          return data.json();\n        }\n        throw new Error();\n      })\n      .then((data) => {\n        // 一覧のデータを変更\n        this.getProjectInfoData(data);\n        // ユーザー情報を取得する\n        this.getUserData(data);\n      })\n      .catch(() => {\n        this.setState({\n          // エラーメッセージを表示する\n          // M060: データ取得に失敗しました。\n          status: I18n.t(\"message.M060\"),\n          visible: true,\n          type: \"error\",\n        });\n      });\n  };\n\n  // 一覧のデータを変更\n  getProjectInfoData = (data) => {\n    data.project_infos.forEach((project_infos, index) => {\n      let username = \"\";\n      let email = \"\";\n      let ngWord = \"\";\n\n      project_infos.ngwords.forEach((ngwords) => {\n        ngWord += ngwords + \"\\n\";\n      });\n\n      var min = project_infos.min_wordcount.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0,\n      });\n      var max = project_infos.max_wordcount.toLocaleString(navigator.language, {\n        minimumFractionDigits: 0,\n      });\n\n      email = project_infos.email;\n      var wordcount = min + \" ~ \" + max;\n\n      if (project_infos.user_name != null) {\n        username = project_infos.user_name;\n        if (project_infos.user_name_last != null) {\n          username += \" \" + project_infos.user_name_last;\n        }\n      } else {\n        if (project_infos.user_name_last != null)\n          username = project_infos.user_name_last;\n      }\n\n      const newEl = {\n        key: project_infos.id,\n        id: index + 1,\n        project_name: project_infos.project_name,\n        min_wordcount: project_infos.min_wordcount,\n        max_wordcount: project_infos.max_wordcount,\n        wordcount: wordcount,\n        email: email,\n        username: username,\n        ng_word: ngWord,\n      };\n      this.setState((prevState) => ({\n        project_infos: [...prevState.project_infos, newEl],\n      }));\n    });\n  };\n\n  // ユーザー情報を取得する\n  getUserData = (data) => {\n    // ユーザー情報を取得する\n    data.users.forEach((user, index) => {\n      // user_nameとuser_name_lastを合わせる\n      const userName =\n        (user.user_name == null ? \"\" : user.user_name) +\n        \" \" +\n        (user.user_name_last == null ? \"\" : user.user_name_last);\n      const newEl = {\n        key: user.id,\n        id: index + 1,\n        email: user.email,\n        username: userName,\n      };\n      this.setState((prevState) => ({\n        list: [...prevState.list, newEl],\n      }));\n    });\n  };\n\n  modalColumns = [\n    {\n      title: I18n.t(\"projectInfo.id\"),\n      dataIndex: \"id\",\n      key: \"id\",\n      align: \"center\",\n    },\n    {\n      title: I18n.t(\"projectInfo.email\"),\n      dataIndex: \"email\",\n      key: \"email\",\n      align: \"center\",\n    },\n    {\n      title: I18n.t(\"projectInfo.username\"),\n      dataIndex: \"username\",\n      key: \"username\",\n      align: \"center\",\n    },\n  ];\n\n  // ポップアップ画面を表示する\n  showModal = (email) => {\n    this.setState({\n      isModalVisible: true,\n    });\n    // フロントメールアドレスでユーザー情報を検索する\n    this.searchResult(email);\n  };\n\n  onSelectChange = (selectedRowKeys, selectedRows) => {\n    const newEl = {\n      key: selectedRows[0].key,\n      id: selectedRows[0].id,\n      email: selectedRows[0].email,\n      username: selectedRows[0].username,\n    };\n    this.setState({\n      selectedUser: newEl,\n      editable: false,\n      bEmail: selectedRows[0].email,\n    });\n    this.handleCancel();\n  };\n\n  handleCancel = () => {\n    this.setState({ isModalVisible: false, modalList: [] });\n  };\n\n  // フロントメールアドレスでユーザー情報を検索する\n  searchResult = (email) => {\n    if (email == \"\") {\n      this.setState({ modalList: this.state.list, email: \"\" });\n    } else {\n      let users = this.state.list.filter((user) => user.email.includes(email));\n      this.setState({ modalList: users, email: email });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"site-layout-background\"\n          style={{ padding: 24, minHeight: 360, align: \"right\" }}\n        >\n          <Space direction=\"vertical\" style={{ width: \"100%\" }}>\n            <Card>\n              <Entry\n                onFinish={this.onFinish}\n                status={this.state.status}\n                type={this.state.type}\n                handleClose={this.handleClose}\n                visible={this.state.visible}\n                editProjectInfo={this.state.editProjectInfo}\n                showModal={this.showModal}\n                isModalVisible={this.state.isModalVisible}\n                modalList={this.state.modalList}\n                handleCancel={this.handleCancel}\n                searchResult={this.searchResult}\n                onSelectChange={this.onSelectChange}\n                selectedRowKeys={this.state.selectedRowKeys}\n                state={this.state}\n                modalColumns={this.modalColumns}\n                selectedUser={this.state.selectedUser}\n                email={this.state.email}\n                handleBlur={this.handleBlur}\n              />\n            </Card>\n            <Infos\n              loadInfos={this.loadInfos}\n              deleteStatus={this.deleteStatus}\n              columns={this.columns}\n              handleSearch={this.handleSearch}\n              state={this.state.project_infos}\n            />\n          </Space>\n        </div>\n      </>\n    );\n  }\n}\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}