{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021-outline-tool-no-docker-master\\\\app\\\\javascript\\\\components\\\\group\\\\_index.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport Entry from \"./_entry.jsx\";\nimport List from \"./_list.jsx\";\nimport { Breadcrumb, Button, Checkbox, Form, Input, Layout, Col, Row, Table, Space, Popconfirm, message, Modal } from \"antd\";\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\n\nvar Group = /*#__PURE__*/function (_React$Component) {\n  _inherits(Group, _React$Component);\n\n  var _super = _createSuper(Group);\n\n  function Group() {\n    var _this;\n\n    _classCallCheck(this, Group);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      groups: [],\n      searchText: \"\",\n      searchedColumn: \"\",\n      group_name: \"\",\n      group_description: \"\",\n      editGroups: [],\n      editStatus: false\n    };\n    _this.formRef = /*#__PURE__*/React.createRef();\n\n    _this.loadGroups = function () {\n      var url = \"/api/v1/group/index\";\n      fetch(url).then(function (data) {\n        if (data.ok) {\n          return data.json();\n        }\n\n        throw new Error(\"Network error.\");\n      }).then(function (data) {\n        var sr = 1;\n        data.forEach(function (group) {\n          var newEl = {\n            key: group.id,\n            id: group.id,\n            sr: sr,\n            name: group.group_name,\n            description: group.group_description\n          };\n          sr = sr + 1;\n\n          _this.setState(function (prevState) {\n            return {\n              groups: [].concat(_toConsumableArray(prevState.groups), [newEl])\n            };\n          });\n        });\n      })[\"catch\"](function (err) {\n        return message.error(\"Error: \" + err);\n      });\n    };\n\n    _this.editGroup = function (values, currentForm) {\n      fetch(\"/api/v1/group/update/\".concat(values.id), {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      }).then(function (data) {\n        if (data.ok) {\n          var modal = Modal.success({\n            title: I18n.t(\"message.M005\")\n          });\n          setTimeout(function () {\n            return modal.destroy();\n          }, 1000);\n          return data.json();\n        } else {\n          var _modal = Modal.error({\n            title: I18n.t(\"message.M058\")\n          });\n\n          setTimeout(function () {\n            return _modal.destroy();\n          }, 1000);\n        }\n      });\n\n      _this.setState({\n        groups: []\n      });\n\n      _this.loadGroups();\n\n      currentForm.current.resetFields();\n    };\n\n    _this.action = function (values, currentForm) {\n      if (values.id > 0) {\n        _this.editGroup(values, currentForm);\n      } else {\n        _this.createGroup(values, currentForm);\n      }\n    };\n\n    _this.createGroup = function (values, currentForm) {\n      var url = \"/api/v1/group/create\"; // fetch(`/api/v1/group/get/${values.id}`)\n      //   .then((data) => {\n      //     if (data.ok) {\n      //       const modal = Modal.warning({\n      //         title: I18n.t(\"message.M009\"),\n      //       });\n      //       return data.json();\n      //     } else {\n\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(values)\n      }).then(function (data) {\n        if (data.ok) {\n          var modal = Modal.success({\n            title: I18n.t(\"message.M004\")\n          });\n          setTimeout(function () {\n            return modal.destroy();\n          }, 1000);\n          return data.json();\n        } else {\n          var _modal2 = Modal.error({\n            title: I18n.t(\"message.M056\")\n          });\n\n          setTimeout(function () {\n            return _modal2.destroy();\n          }, 1000);\n        }\n      }).then(function (data) {\n        var newEl = {\n          key: data.id,\n          id: data.id,\n          name: data.group_name,\n          description: data.group_description\n        };\n\n        _this.setState(function (prevState) {\n          return {\n            groups: [].concat(_toConsumableArray(prevState.groups), [newEl])\n          };\n        });\n      });\n      currentForm.current.resetFields(); // }\n      // throw new Error(\"Network error.\");\n      // })\n      // .then((data) => {\n      //   console.log(data.groups);\n      //   data.forEach((group) => {\n      //     const newEl = {\n      //       key: group.id,\n      //       id: group.id,\n      //       name: group.group_name,\n      //       description: group.group_description,\n      //     };\n      //     this.setState((prevState) => ({\n      //       groups: [...prevState.groups, newEl],\n      //     }));\n      //   });\n      // })\n      // .catch((err) => message.error(\"Error: \" + err));\n    };\n\n    _this.deleteStatus = function (e) {\n      var url = \"/api/v1/group/destroy\";\n      fetch(\"/api/v1/group/destroy/\".concat(e.id), {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(e)\n      }).then(function (data) {\n        if (data.ok) {\n          var modal = Modal.success({\n            title: I18n.t(\"message.M007\")\n          });\n          setTimeout(function () {\n            return modal.destroy();\n          }, 1000);\n          console.log(data.id);\n\n          _this.removeGroupFromList(data.groups.id);\n\n          return data.json();\n        } else {\n          var _modal3 = Modal.error({\n            title: I18n.t(\"message.M059\")\n          });\n\n          setTimeout(function () {\n            return _modal3.destroy();\n          }, 1000);\n        }\n      }); // this.setState({ groups: [] });\n      // this.loadGroups();\n    };\n\n    _this.editStatus = function (e) {\n      _this.formRef.current.setFieldsValue({\n        group_name: e.name,\n        group_description: e.description,\n        id: e.id\n      });\n\n      _this.setState({\n        editStatus: true\n      });\n    };\n\n    _this.setForm = function (currentForm) {\n      _this.formRef = currentForm;\n    };\n\n    return _this;\n  }\n\n  _createClass(Group, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadGroups();\n    }\n  }, {\n    key: \"addNewGroup\",\n    value: function addNewGroup(group) {\n      this.setState({\n        groups: this.state.groups.concat(group)\n      });\n    }\n  }, {\n    key: \"removeGroupFromList\",\n    value: function removeGroupFromList(id) {\n      newGroup = this.state.groups.filter(function (group) {\n        return group.id !== id;\n      });\n      this.setState({\n        groups: newGroup\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Layout, {\n        style: {\n          minHeight: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Entry, {\n        createGroup: this.action,\n        formData: this.state.editGroups,\n        group_name: \"{this.state.group_name}\",\n        group_description: \"{this.state.group_description}\",\n        setForm: this.setForm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(List, {\n        dataSource: this.state.groups,\n        deleteStatus: this.deleteStatus,\n        editStatus: this.editStatus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Group;\n}(React.Component);\n\nexport default Group;","map":{"version":3,"sources":["D:/2021-outline-tool-no-docker-master/app/javascript/components/group/_index.jsx"],"names":["React","I18n","Entry","List","Breadcrumb","Button","Checkbox","Form","Input","Layout","Col","Row","Table","Space","Popconfirm","message","Modal","EditOutlined","DeleteOutlined","SearchOutlined","Group","state","groups","searchText","searchedColumn","group_name","group_description","editGroups","editStatus","formRef","createRef","loadGroups","url","fetch","then","data","ok","json","Error","sr","forEach","group","newEl","key","id","name","description","setState","prevState","err","error","editGroup","values","currentForm","method","headers","body","JSON","stringify","modal","success","title","t","setTimeout","destroy","current","resetFields","action","createGroup","deleteStatus","e","console","log","removeGroupFromList","setFieldsValue","setForm","concat","newGroup","filter","minHeight","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport I18n from \"i18n-js\";\r\nimport \"../../bundles/i18n/ja.js\";\r\nimport Entry from \"./_entry.jsx\";\r\nimport List from \"./_list.jsx\";\r\nimport {\r\n  Breadcrumb,\r\n  Button,\r\n  Checkbox,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Col,\r\n  Row,\r\n  Table,\r\n  Space,\r\n  Popconfirm,\r\n  message,\r\n  Modal,\r\n} from \"antd\";\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SearchOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass Group extends React.Component {\r\n  state = {\r\n    groups: [],\r\n    searchText: \"\",\r\n    searchedColumn: \"\",\r\n    group_name: \"\",\r\n    group_description: \"\",\r\n    editGroups: [],\r\n    editStatus: false,\r\n  };\r\n\r\n  formRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    this.loadGroups();\r\n  }\r\n\r\n  loadGroups = () => {\r\n    const url = \"/api/v1/group/index\";\r\n\r\n    fetch(url)\r\n      .then((data) => {\r\n        if (data.ok) {\r\n          return data.json();\r\n        }\r\n        throw new Error(\"Network error.\");\r\n      })\r\n      .then((data) => {\r\n        let sr = 1;\r\n        data.forEach((group) => {\r\n          const newEl = {\r\n            key: group.id,\r\n            id: group.id,\r\n            sr: sr,\r\n            name: group.group_name,\r\n            description: group.group_description,\r\n          };\r\n          sr = sr + 1;\r\n\r\n          this.setState((prevState) => ({\r\n            groups: [...prevState.groups, newEl],\r\n          }));\r\n        });\r\n      })\r\n      .catch((err) => message.error(\"Error: \" + err));\r\n  };\r\n\r\n  editGroup = (values, currentForm) => {\r\n    fetch(`/api/v1/group/update/${values.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    }).then((data) => {\r\n      if (data.ok) {\r\n        const modal = Modal.success({\r\n          title: I18n.t(\"message.M005\"),\r\n        });\r\n        setTimeout(() => modal.destroy(), 1000);\r\n        return data.json();\r\n      } else {\r\n        const modal = Modal.error({\r\n          title: I18n.t(\"message.M058\"),\r\n        });\r\n        setTimeout(() => modal.destroy(), 1000);\r\n      }\r\n    });\r\n\r\n    this.setState({ groups: [] });\r\n    this.loadGroups();\r\n\r\n    currentForm.current.resetFields();\r\n  };\r\n\r\n  action = (values, currentForm) => {\r\n    if (values.id > 0) {\r\n      this.editGroup(values, currentForm);\r\n    } else {\r\n      this.createGroup(values, currentForm);\r\n    }\r\n  };\r\n\r\n  createGroup = (values, currentForm) => {\r\n    const url = \"/api/v1/group/create\";\r\n\r\n    // fetch(`/api/v1/group/get/${values.id}`)\r\n    //   .then((data) => {\r\n    //     if (data.ok) {\r\n    //       const modal = Modal.warning({\r\n    //         title: I18n.t(\"message.M009\"),\r\n    //       });\r\n    //       return data.json();\r\n    //     } else {\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(values),\r\n    })\r\n      .then((data) => {\r\n        if (data.ok) {\r\n          const modal = Modal.success({\r\n            title: I18n.t(\"message.M004\"),\r\n          });\r\n          setTimeout(() => modal.destroy(), 1000);\r\n          return data.json();\r\n        } else {\r\n          const modal = Modal.error({\r\n            title: I18n.t(\"message.M056\"),\r\n          });\r\n          setTimeout(() => modal.destroy(), 1000);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        const newEl = {\r\n          key: data.id,\r\n          id: data.id,\r\n          name: data.group_name,\r\n          description: data.group_description,\r\n        };\r\n\r\n        this.setState((prevState) => ({\r\n          groups: [...prevState.groups, newEl],\r\n        }));\r\n      });\r\n\r\n    currentForm.current.resetFields();\r\n    // }\r\n    // throw new Error(\"Network error.\");\r\n    // })\r\n    // .then((data) => {\r\n    //   console.log(data.groups);\r\n    //   data.forEach((group) => {\r\n    //     const newEl = {\r\n    //       key: group.id,\r\n    //       id: group.id,\r\n    //       name: group.group_name,\r\n    //       description: group.group_description,\r\n    //     };\r\n\r\n    //     this.setState((prevState) => ({\r\n    //       groups: [...prevState.groups, newEl],\r\n    //     }));\r\n    //   });\r\n    // })\r\n    // .catch((err) => message.error(\"Error: \" + err));\r\n  };\r\n\r\n  addNewGroup(group) {\r\n    this.setState({\r\n      groups: this.state.groups.concat(group),\r\n    });\r\n  }\r\n\r\n  deleteStatus = (e) => {\r\n    const url = \"/api/v1/group/destroy\";\r\n    fetch(`/api/v1/group/destroy/${e.id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(e),\r\n    }).then((data) => {\r\n      if (data.ok) {\r\n        const modal = Modal.success({\r\n          title: I18n.t(\"message.M007\"),\r\n        });\r\n        setTimeout(() => modal.destroy(), 1000);\r\n        console.log(data.id);\r\n        this.removeGroupFromList(data.groups.id);\r\n        return data.json();\r\n      } else {\r\n        const modal = Modal.error({\r\n          title: I18n.t(\"message.M059\"),\r\n        });\r\n        setTimeout(() => modal.destroy(), 1000);\r\n      }\r\n    });\r\n\r\n    // this.setState({ groups: [] });\r\n    // this.loadGroups();\r\n  };\r\n\r\n  editStatus = (e) => {\r\n    this.formRef.current.setFieldsValue({\r\n      group_name: e.name,\r\n      group_description: e.description,\r\n      id: e.id,\r\n    });\r\n\r\n    this.setState({ editStatus: true });\r\n  };\r\n\r\n  setForm = (currentForm) => {\r\n    this.formRef = currentForm;\r\n  };\r\n\r\n  removeGroupFromList(id) {\r\n    newGroup = this.state.groups.filter((group) => group.id !== id);\r\n    this.setState({\r\n      groups: newGroup,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <Entry\r\n          createGroup={this.action}\r\n          formData={this.state.editGroups}\r\n          group_name=\"{this.state.group_name}\"\r\n          group_description=\"{this.state.group_description}\"\r\n          setForm={this.setForm}\r\n        />\r\n        <List\r\n          dataSource={this.state.groups}\r\n          deleteStatus={this.deleteStatus}\r\n          editStatus={this.editStatus}\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Group;\r\n"]},"metadata":{},"sourceType":"module"}