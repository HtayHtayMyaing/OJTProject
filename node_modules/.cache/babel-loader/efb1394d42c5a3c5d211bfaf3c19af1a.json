{"ast":null,"code":"var _jsxFileName = \"D:\\\\2021-outline-tool-no-docker-master\\\\app\\\\javascript\\\\components\\\\projectInfo\\\\_entry.jsx\",\n    _this = this;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { Button, Form, Input, Alert, Row, Card, InputNumber, Col } from \"antd\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport PopUpModal from \"./_popupModal.jsx\";\nimport FormItem from \"antd/lib/form/FormItem\";\nvar Search = Input.Search;\nvar TextArea = Input.TextArea;\n\nvar Entry = function Entry(props) {\n  var message1 = \"\";\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  React.useEffect(function () {\n    if (props.state.editable) {\n      if (props.state.userId == 0) {\n        form.setFieldsValue({\n          id: props.editProjectInfo.id,\n          key: props.editProjectInfo.key,\n          project_name: props.editProjectInfo.project_name,\n          min_wordcount: props.editProjectInfo.min_wordcount,\n          max_wordcount: props.editProjectInfo.max_wordcount,\n          ng_word: props.editProjectInfo.ngWords,\n          user_id: props.editProjectInfo.user_id,\n          email: props.editProjectInfo.email\n        });\n      } else {\n        form.setFieldsValue({\n          id: props.editProjectInfo.id,\n          key: props.editProjectInfo.key,\n          project_name: props.editProjectInfo.project_name,\n          min_wordcount: props.editProjectInfo.min_wordcount,\n          max_wordcount: props.editProjectInfo.max_wordcount,\n          ng_word: props.editProjectInfo.ngWords,\n          user_id: props.state.userId,\n          email: props.state.bEmail\n        });\n      }\n    } else {\n      if (props.state.userId == 0) {\n        form.setFieldsValue({\n          user_id: props.selectedUser.key,\n          email: props.selectedUser.email\n        });\n      } else {\n        form.setFieldsValue({\n          user_id: props.state.userId,\n          email: props.state.bEmail\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.visible ? /*#__PURE__*/React.createElement(Alert, {\n    className: \"alert-message-style\",\n    message: props.status,\n    type: props.type,\n    closable: true,\n    afterClose: props.handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }) : null, /*#__PURE__*/React.createElement(Form, {\n    onFinish: props.onFinish,\n    id: \"entryForm\",\n    form: form,\n    labelCol: {\n      span: 10\n    },\n    wrapperCol: {\n      span: 6\n    },\n    layout: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormItem, {\n    name: \"key\",\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    name: \"id\",\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(FormItem, {\n    name: \"user_id\",\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"project_name\",\n    label: [I18n.t(\"projectInfo.projectName\")],\n    rules: [{\n      required: true,\n      message: I18n.t(\"message.M019\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    maxLength: 255,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: [I18n.t(\"projectInfo.wordcount\")],\n    style: {\n      marginBottom: 0\n    },\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"min_wordcount\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"message.M021\")\n    }, function (_ref) {\n      var getFieldValue = _ref.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (getFieldValue(\"display_order\") < 1) {\n            message1 = I18n.t(\"message.M001\");\n            return Promise.reject();\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    formatter: function formatter(value) {\n      return \"\".concat(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    parser: function parser(value) {\n      return value.replace(/\\$\\s?|(,*)/g, \"\");\n    },\n    style: {\n      width: \"100%\",\n      margin: 0\n    },\n    min: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: \"inline-block\",\n      width: \"100%\",\n      textAlign: \"center\",\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"~\")), /*#__PURE__*/React.createElement(Col, {\n    span: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"max_wordcount\",\n    rules: [{\n      required: true,\n      message: I18n.t(\"message.M022\")\n    }, function (_ref2) {\n      var getFieldValue = _ref2.getFieldValue;\n      return {\n        validator: function validator(_, value) {\n          if (getFieldValue(\"display_order\") < 1) {\n            message1 = I18n.t(\"message.M001\");\n            return Promise.reject();\n          }\n\n          return Promise.resolve();\n        }\n      };\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    formatter: function formatter(value) {\n      return \"\".concat(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    },\n    parser: function parser(value) {\n      return value.replace(/\\$\\s?|(,*)/g, \"\");\n    },\n    style: {\n      width: \"100%\",\n      margin: 0\n    },\n    min: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: [I18n.t(\"projectInfo.email\")],\n    style: {\n      marginTop: 0,\n      paddingTop: 0\n    },\n    rules: [{\n      pattern: new RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@(?:[a-zA-Z0-9]+\\.)+[a-zA-Z0-9-]{2,3}$/),\n      message: I18n.t(\"message.M032\")\n    }, {\n      required: true,\n      message: I18n.t(\"message.M024\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    enterButton: true,\n    onSearch: props.showModal,\n    onBlur: props.handleBlur,\n    maxLength: 255,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"ng_word\",\n    label: [I18n.t(\"projectInfo.ngWord\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    style: {\n      minHeight: 100,\n      resize: \"none\"\n    },\n    maxLength: 255,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: {\n      offset: 10,\n      span: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, I18n.t(\"common.save\")))), /*#__PURE__*/React.createElement(PopUpModal, {\n    searchResult: props.searchResult,\n    modalList: props.modalList,\n    modalColumns: props.modalColumns,\n    isModalVisible: props.isModalVisible,\n    handleCancel: props.handleCancel,\n    onSelectChange: props.onSelectChange,\n    selectedRowKeys: props.selectedRowKeys,\n    email: props.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Entry;","map":{"version":3,"sources":["D:/2021-outline-tool-no-docker-master/app/javascript/components/projectInfo/_entry.jsx"],"names":["Button","Form","Input","Alert","Row","Card","InputNumber","Col","React","I18n","PopUpModal","FormItem","Search","TextArea","Entry","props","message1","useForm","form","useEffect","state","editable","userId","setFieldsValue","id","editProjectInfo","key","project_name","min_wordcount","max_wordcount","ng_word","ngWords","user_id","email","bEmail","selectedUser","visible","status","type","handleClose","onFinish","span","t","required","message","marginBottom","getFieldValue","validator","_","value","Promise","reject","resolve","replace","width","margin","display","textAlign","fontSize","marginTop","paddingTop","pattern","RegExp","showModal","handleBlur","minHeight","resize","offset","searchResult","modalList","modalColumns","isModalVisible","handleCancel","onSelectChange","selectedRowKeys"],"mappings":"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","sourcesContent":["import { Button, Form, Input, Alert, Row, Card, InputNumber, Col } from \"antd\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport PopUpModal from \"./_popupModal.jsx\";\nimport FormItem from \"antd/lib/form/FormItem\";\n\nconst { Search } = Input;\nconst { TextArea } = Input;\n\nconst Entry = (props) => {\n  var message1 = \"\";\n  const [form] = Form.useForm();\n\n  React.useEffect(() => {\n    if (props.state.editable) {\n      if (props.state.userId == 0) {\n        form.setFieldsValue({\n          id: props.editProjectInfo.id,\n          key: props.editProjectInfo.key,\n          project_name: props.editProjectInfo.project_name,\n          min_wordcount: props.editProjectInfo.min_wordcount,\n          max_wordcount: props.editProjectInfo.max_wordcount,\n          ng_word: props.editProjectInfo.ngWords,\n          user_id: props.editProjectInfo.user_id,\n          email: props.editProjectInfo.email,\n        });\n      } else {\n        form.setFieldsValue({\n          id: props.editProjectInfo.id,\n          key: props.editProjectInfo.key,\n          project_name: props.editProjectInfo.project_name,\n          min_wordcount: props.editProjectInfo.min_wordcount,\n          max_wordcount: props.editProjectInfo.max_wordcount,\n          ng_word: props.editProjectInfo.ngWords,\n          user_id: props.state.userId,\n          email: props.state.bEmail,\n        });\n      }\n    } else {\n      if (props.state.userId == 0) {\n        form.setFieldsValue({\n          user_id: props.selectedUser.key,\n          email: props.selectedUser.email,\n        });\n      } else {\n        form.setFieldsValue({\n          user_id: props.state.userId,\n          email: props.state.bEmail,\n        });\n      }\n    }\n  });\n\n  return (\n    <>\n      {props.visible ? (\n        <Alert\n          className=\"alert-message-style\"\n          message={props.status}\n          type={props.type}\n          closable\n          afterClose={props.handleClose}\n        />\n      ) : null}\n      <Form\n        onFinish={props.onFinish}\n        id=\"entryForm\"\n        form={form}\n        labelCol={{ span: 10 }}\n        wrapperCol={{ span: 6 }}\n        layout=\"horizontal\"\n      >\n        <FormItem name=\"key\" hidden>\n          <Input />\n        </FormItem>\n        <FormItem name=\"id\" hidden>\n          <Input />\n        </FormItem>\n        <FormItem name=\"user_id\" hidden>\n          <Input />\n        </FormItem>\n\n        <Form.Item\n          name=\"project_name\"\n          label={[I18n.t(\"projectInfo.projectName\")]}\n          rules={[{ required: true, message: I18n.t(\"message.M019\") }]}\n        >\n          <Input maxLength={255} />\n        </Form.Item>\n\n        <Form.Item\n          label={[I18n.t(\"projectInfo.wordcount\")]}\n          style={{ marginBottom: 0 }}\n          required\n        >\n          <Row>\n            <Col span={10}>\n              <Form.Item\n                name=\"min_wordcount\"\n                rules={[\n                  { required: true, message: I18n.t(\"message.M021\") },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (getFieldValue(\"display_order\") < 1) {\n                        message1 = I18n.t(\"message.M001\");\n                        return Promise.reject();\n                      }\n                      return Promise.resolve();\n                    },\n                  }),\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) =>\n                    `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                  style={{ width: \"100%\", margin: 0 }}\n                  min={1}\n                />\n              </Form.Item>\n            </Col>\n\n            <Col span={4}>\n              <span\n                style={{\n                  display: \"inline-block\",\n                  width: \"100%\",\n                  textAlign: \"center\",\n                  fontSize: 20,\n                }}\n              >\n                ~\n              </span>\n            </Col>\n\n            <Col span={10}>\n              <Form.Item\n                name=\"max_wordcount\"\n                rules={[\n                  { required: true, message: I18n.t(\"message.M022\") },\n                  ({ getFieldValue }) => ({\n                    validator(_, value) {\n                      if (getFieldValue(\"display_order\") < 1) {\n                        message1 = I18n.t(\"message.M001\");\n                        return Promise.reject();\n                      }\n                      return Promise.resolve();\n                    },\n                  }),\n                ]}\n              >\n                <InputNumber\n                  formatter={(value) =>\n                    `${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n                  }\n                  parser={(value) => value.replace(/\\$\\s?|(,*)/g, \"\")}\n                  style={{ width: \"100%\", margin: 0 }}\n                  min={1}\n                />\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form.Item>\n\n        <Form.Item\n          name=\"email\"\n          label={[I18n.t(\"projectInfo.email\")]}\n          style={{ marginTop: 0, paddingTop: 0 }}\n          rules={[\n            {\n              pattern: new RegExp(\n                /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@(?:[a-zA-Z0-9]+\\.)+[a-zA-Z0-9-]{2,3}$/\n              ),\n              message: I18n.t(\"message.M032\"),\n            },\n            {\n              required: true,\n              message: I18n.t(\"message.M024\"),\n            },\n          ]}\n        >\n          <Search\n            enterButton\n            onSearch={props.showModal}\n            onBlur={props.handleBlur}\n            maxLength={255}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"ng_word\" label={[I18n.t(\"projectInfo.ngWord\")]}>\n          <TextArea\n            style={{ minHeight: 100, resize: \"none\" }}\n            maxLength={255}\n          />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ offset: 10, span: 8 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            {I18n.t(\"common.save\")}\n          </Button>\n        </Form.Item>\n      </Form>\n\n      <PopUpModal\n        searchResult={props.searchResult}\n        modalList={props.modalList}\n        modalColumns={props.modalColumns}\n        isModalVisible={props.isModalVisible}\n        handleCancel={props.handleCancel}\n        onSelectChange={props.onSelectChange}\n        selectedRowKeys={props.selectedRowKeys}\n        email={props.email}\n      />\n    </>\n  );\n};\nexport default Entry;\n"]},"metadata":{},"sourceType":"module"}