{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLocaleReceiver = exports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _context = _interopRequireDefault(require(\"./context\"));\n\nvar _default2 = _interopRequireDefault(require(\"./default\"));\n\nvar LocaleReceiver = function LocaleReceiver(props) {\n  var _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'global' : _props$componentName,\n      defaultLocale = props.defaultLocale,\n      children = props.children;\n  var antLocale = React.useContext(_context[\"default\"]);\n  var getLocale = React.useMemo(function () {\n    var _a;\n\n    var locale = defaultLocale || _default2[\"default\"][componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, locale instanceof Function ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  var getLocaleCode = React.useMemo(function () {\n    var localeCode = antLocale && antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n    if (antLocale && antLocale.exist && !localeCode) {\n      return _default2[\"default\"].locale;\n    }\n\n    return localeCode;\n  }, [antLocale]);\n  return children(getLocale, getLocaleCode, antLocale);\n};\n\nvar _default = LocaleReceiver;\nexports[\"default\"] = _default;\n\nvar useLocaleReceiver = function useLocaleReceiver(componentName, defaultLocale) {\n  var antLocale = React.useContext(_context[\"default\"]);\n  var getLocale = React.useMemo(function () {\n    var _a;\n\n    var locale = defaultLocale || _default2[\"default\"][componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return (0, _extends2[\"default\"])((0, _extends2[\"default\"])({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [getLocale];\n};\n\nexports.useLocaleReceiver = useLocaleReceiver;","map":null,"metadata":{},"sourceType":"module"}