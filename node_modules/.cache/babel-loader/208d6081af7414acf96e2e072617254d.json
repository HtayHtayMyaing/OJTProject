{"ast":null,"code":"var _jsxFileName = \"D:\\\\ROR\\\\2021-outline-tool-no-docker\\\\app\\\\javascript\\\\components\\\\templateType\\\\_entry.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Card, Form, Input, Button, Table, message, Popconfirm, Space } from \"antd\";\nimport { EditOutlined, DeleteOutlined, SearchOutlined } from \"@ant-design/icons\";\n\nvar NewTemplate = function NewTemplate(props) {\n  var formFields = {};\n  var layout = {\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    textalign: \"center\"\n  };\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: 1070,\n      marginLeft: 25,\n      marginRight: 25,\n      marginTop: 25,\n      paddingBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form, Object.assign({\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      props.handleFormSubmit(formFields.name.value, formFields.description.value);\n      e.target.reset();\n    }\n  }, layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"\",\n    label: \"\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u7A2E\\u985E\",\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'email'],\n    label: \"\\u8868\\u793A\\u9806\",\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'email'],\n    label: \"\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u540D\\u79F0\",\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    style: {\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: ['user', 'introduction'],\n    label: \"\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u5185\\u5BB9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    style: {\n      width: 300\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n      offset: 8\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n};\n\nexport default NewTemplate;","map":{"version":3,"sources":["D:/ROR/2021-outline-tool-no-docker/app/javascript/components/templateType/_entry.jsx"],"names":["React","Card","Form","Input","Button","Table","message","Popconfirm","Space","EditOutlined","DeleteOutlined","SearchOutlined","NewTemplate","props","formFields","layout","labelCol","span","wrapperCol","textalign","width","marginLeft","marginRight","marginTop","paddingBottom","e","preventDefault","handleFormSubmit","name","value","description","target","reset","required","offset"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    Card,\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Table,\r\n    message,\r\n    Popconfirm,\r\n    Space,\r\n} from \"antd\";\r\nimport {\r\n    EditOutlined,\r\n    DeleteOutlined,\r\n    SearchOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst NewTemplate = (props) => {\r\n    let formFields = {}\r\n   \r\n    const layout = {\r\n        labelCol: {\r\n            span: 8,\r\n        },\r\n        wrapperCol: {\r\n            span: 16,\r\n        },\r\n        textalign: \"center\",\r\n    };\r\n\r\n    return(\r\n        <Card  style={{ width: 1070,marginLeft: 25, marginRight: 25, marginTop: 25, paddingBottom: 20 }}>\r\n            <div></div>\r\n        <Form onSubmit={ (e) => { \r\n            e.preventDefault();\r\n            props.handleFormSubmit(\r\n                formFields.name.value,\r\n                formFields.description.value\r\n            ); \r\n            e.target.reset();}\r\n            } {...layout}  >\r\n        <Form.Item\r\n            name=\"\"\r\n            label=\"テンプレート種類\"\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                },\r\n            ]}\r\n        >\r\n            <Input style={{width: 300}} />\r\n        </Form.Item>\r\n        <Form.Item\r\n        name={['user', 'email']}\r\n        label=\"表示順\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n            <Input style={{width: 300}} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n        name={['user', 'email']}\r\n        label=\"テンプレート名称\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n        >\r\n            <Input style={{width: 300}} />\r\n        </Form.Item>\r\n      \r\n        <Form.Item name={['user', 'introduction']} label=\"テンプレート内容\">\r\n            <Input.TextArea style={{width: 300}} />\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form.Item>\r\n    </Form>\r\n    </Card>\r\n    )\r\n  }\r\nexport default NewTemplate;"]},"metadata":{},"sourceType":"module"}